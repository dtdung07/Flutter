import 'package:flutter/material.dart';
import 'package:flutter/cupertino.dart';
import 'package:font_awesome_flutter/font_awesome_flutter.dart';
import 'dart:math';

/// ·ª®ng d·ª•ng **M√°y t√≠nh BMI** (Body Mass Index).
///
/// - Ng∆∞·ªùi d√πng ch·ªçn gi·ªõi t√≠nh, nh·∫≠p chi·ªÅu cao (cm), c√¢n n·∫∑ng (kg) v√† tu·ªïi.
/// - ·ª®ng d·ª•ng s·∫Ω t√≠nh to√°n ch·ªâ s·ªë BMI v√† ƒë∆∞a ra ph√¢n lo·∫°i c√πng l·ªùi khuy√™n.
/// - Giao di·ªán ƒë∆∞·ª£c thi·∫øt k·∫ø theo phong c√°ch t·ªëi (dark theme).
void main() => runApp(BMICalculator());

/// Widget g·ªëc c·ªßa to√†n b·ªô ·ª©ng d·ª•ng.
class BMICalculator extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      debugShowCheckedModeBanner: false,
      theme: ThemeData.dark().copyWith(
        scaffoldBackgroundColor: Color(0xFF111328), // M√†u n·ªÅn chung
      ),
      home: InputPage(), // M√†n h√¨nh nh·∫≠p d·ªØ li·ªáu
    );
  }
}

// ================================
// H·∫∞NG S·ªê D√ôNG CHUNG CHO UI
// ================================
const kactiveCardColor = Colors.blueAccent; // M√†u th·∫ª ƒë∆∞·ª£c ch·ªçn
const kinactiveCardColor = Color(0xFF1D1E33); // M√†u th·∫ª ch∆∞a ch·ªçn
const kbottomContainHeight = 60.0; // Chi·ªÅu cao n√∫t t√≠nh BMI

const knumberTextStyle = TextStyle(fontSize: 50.0, fontWeight: FontWeight.w900);
const klabelTextStyle = TextStyle(fontSize: 18.0, color: Colors.white);
const klargestButtonTextStyle = TextStyle(
  fontSize: 25.0,
  fontWeight: FontWeight.bold,
);
const ktitleTextStyle = TextStyle(fontSize: 50.0, fontWeight: FontWeight.bold);
const kresultTextStyle = TextStyle(
  color: Color(0xFF24D876),
  fontSize: 22.0,
  fontWeight: FontWeight.bold,
);
const kBMITextStyle = TextStyle(fontSize: 100.0, fontWeight: FontWeight.bold);
const kbodyTextStyle = TextStyle(fontSize: 22.0);

// =================================
// L·ªöP X·ª¨ L√ù LOGIC T√çNH BMI
// =================================
class CalculatorBrain {
  CalculatorBrain({required this.height, required this.weight});
  final int height; // Chi·ªÅu cao (cm)
  final int weight; // C√¢n n·∫∑ng (kg)

  double _bmi = 0.0; // Gi√° tr·ªã BMI n·ªôi b·ªô

  /// T√≠nh BMI v√† tr·∫£ v·ªÅ chu·ªói ƒë√£ l√†m tr√≤n 1 ch·ªØ s·ªë th·∫≠p ph√¢n.
  String calculateBMI() {
    _bmi = weight / pow(height / 100, 2);
    return _bmi.toStringAsFixed(1);
  }

  /// Ph√¢n lo·∫°i k·∫øt qu·∫£ BMI.
  String getResult() {
    if (_bmi >= 25) {
      return 'Th·ª´a c√¢n';
    } else if (_bmi > 18.5) {
      return 'B√¨nh th∆∞·ªùng';
    } else {
      return 'Thi·∫øu c√¢n';
    }
  }

  /// L·ªùi khuy√™n t∆∞∆°ng ·ª©ng v·ªõi k·∫øt qu·∫£ BMI.
  String getInterpretation() {
    if (_bmi >= 25) {
      return 'B·∫°n c√≥ c√¢n n·∫∑ng cao h∆°n b√¨nh th∆∞·ªùng. H√£y t·∫≠p luy·ªán th√™m! üí™';
    } else if (_bmi > 18.5) {
      return 'B·∫°n c√≥ c√¢n n·∫∑ng b√¨nh th∆∞·ªùng. T·ªët l·∫Øm! ‚ò∫';
    } else {
      return 'B·∫°n ƒëang thi·∫øu c√¢n. B·∫°n c√≥ th·ªÉ ƒÉn th√™m m·ªôt ch√∫t. ‚òπ';
    }
  }
}

// ==================================================
// WIDGET TH·∫∫ D√ôNG L·∫†I (T·ª∞ T·∫†O) ‚Äì REUSABLE CARD
// ==================================================
class ReusableCard extends StatelessWidget {
  ReusableCard({required this.colour, required this.cardChild});
  final Color colour; // M√†u n·ªÅn c·ªßa th·∫ª
  final Widget cardChild; // N·ªôi dung con

  @override
  Widget build(BuildContext context) {
    return Container(
      child: cardChild,
      margin: EdgeInsets.all(10.0),
      decoration: BoxDecoration(
        color: colour,
        borderRadius: BorderRadius.circular(20.0),
      ),
    );
  }
}

// =============================================
// WIDGET ICON + NH√ÉN CHO TH·∫∫ GI·ªöI T√çNH
// =============================================
class IconContent extends StatelessWidget {
  IconContent({required this.icon, required this.label});
  final IconData icon; // Icon ƒë·∫°i di·ªán
  final String label; // Nh√£n hi·ªÉn th·ªã

  @override
  Widget build(BuildContext context) {
    return Column(
      mainAxisAlignment: MainAxisAlignment.center,
      children: <Widget>[
        Icon(icon, size: 60.0),
        SizedBox(height: 10.0),
        Text(label, style: klabelTextStyle),
      ],
    );
  }
}

/// Enum ƒë·∫°i di·ªán 2 gi·ªõi t√≠nh.
enum GenderType { male, female }

// =======================================
// M√ÄN H√åNH CH√çNH ‚Äì NH·∫¨P D·ªÆ LI·ªÜU
// =======================================
class InputPage extends StatefulWidget {
  @override
  _InputPageState createState() => _InputPageState();
}

class _InputPageState extends State<InputPage> {
  int age = 18; // Tu·ªïi
  int height = 180; // Chi·ªÅu cao (cm)
  int weight = 60; // C√¢n n·∫∑ng (kg)

  // M√†u m·∫∑c ƒë·ªãnh cho 2 th·∫ª
  Color maleCardColour = kinactiveCardColor;
  Color femaleCardColour = kinactiveCardColor;

  /// C·∫≠p nh·∫≠t m√†u khi ch·ªçn gi·ªõi t√≠nh.
  void updateColour(GenderType gender) {
    if (gender == GenderType.male) {
      if (maleCardColour == kinactiveCardColor) {
        maleCardColour = kactiveCardColor;
        femaleCardColour = kinactiveCardColor;
      } else {
        maleCardColour = kinactiveCardColor;
      }
    }

    if (gender == GenderType.female) {
      if (femaleCardColour == kinactiveCardColor) {
        femaleCardColour = kactiveCardColor;
        maleCardColour = kinactiveCardColor;
      } else {
        femaleCardColour = kinactiveCardColor;
      }
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        backgroundColor: Color(0xFF111328),
        title: Center(
          child: Text(
            'M√°y t√≠nh BMI', // Ti√™u ƒë·ªÅ ·ª©ng d·ª•ng
            style: TextStyle(fontWeight: FontWeight.bold, fontSize: 23.0),
          ),
        ),
      ),
      body: Column(
        crossAxisAlignment: CrossAxisAlignment.stretch,
        children: <Widget>[
          // ----------------- H√ÄNG CH·ªåN GI·ªöI T√çNH -----------------
          Expanded(
            child: Row(
              children: <Widget>[
                // NAM
                Expanded(
                  child: GestureDetector(
                    onTap: () {
                      setState(() {
                        updateColour(GenderType.male);
                      });
                    },
                    child: ReusableCard(
                      colour: maleCardColour,
                      cardChild: IconContent(
                        icon: FontAwesomeIcons.mars,
                        label: 'NAM',
                      ),
                    ),
                  ),
                ),

                // N·ªÆ
                Expanded(
                  child: GestureDetector(
                    onTap: () {
                      setState(() {
                        updateColour(GenderType.female);
                      });
                    },
                    child: ReusableCard(
                      colour: femaleCardColour,
                      cardChild: IconContent(
                        icon: FontAwesomeIcons.venus,
                        label: 'N·ªÆ',
                      ),
                    ),
                  ),
                ),
              ],
            ),
          ),

          // ----------------- SLIDER CHI·ªÄU CAO -----------------
          Expanded(
            child: ReusableCard(
              colour: kactiveCardColor,
              cardChild: Column(
                mainAxisAlignment: MainAxisAlignment.center,
                children: <Widget>[
                  Text('CHI·ªÄU CAO', style: klabelTextStyle),
                  Row(
                    mainAxisAlignment: MainAxisAlignment.center,
                    crossAxisAlignment: CrossAxisAlignment.baseline,
                    textBaseline: TextBaseline.alphabetic,
                    children: <Widget>[
                      Text(height.toString(), style: knumberTextStyle),
                      Text('cm'),
                    ],
                  ),
                  SliderTheme(
                    data: SliderThemeData(
                      inactiveTrackColor: Colors.grey,
                      activeTrackColor: Colors.white,
                      thumbColor: Colors.pinkAccent,
                      overlayColor: Colors.black54,
                      thumbShape: RoundSliderThumbShape(
                        enabledThumbRadius: 15.0,
                      ),
                      overlayShape: RoundSliderOverlayShape(
                        overlayRadius: 30.0,
                      ),
                    ),
                    child: Slider(
                      value: height.toDouble(),
                      min: 120,
                      max: 220,
                      onChanged: (double newValue) {
                        setState(() {
                          height = newValue.round();
                        });
                      },
                    ),
                  ),
                ],
              ),
            ),
          ),

          // ----------------- H√ÄNG C√ÇN N·∫∂NG & TU·ªîI -----------------
          Expanded(
            child: Row(
              children: <Widget>[
                // ----------- C√ÇN N·∫∂NG -----------
                Expanded(
                  child: ReusableCard(
                    colour: kactiveCardColor,
                    cardChild: Column(
                      mainAxisAlignment: MainAxisAlignment.center,
                      children: [
                        Text('C√ÇN N·∫∂NG', style: klabelTextStyle),
                        Text(weight.toString(), style: knumberTextStyle),
                        Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            // Gi·∫£m c√¢n n·∫∑ng
                            FloatingActionButton(
                              onPressed: () {
                                setState(() {
                                  weight--;
                                });
                              },
                              child: Icon(
                                Icons.remove,
                                color: Colors.white,
                                size: 35.0,
                              ),
                              backgroundColor: Colors.black54,
                            ),
                            SizedBox(width: 10.0),
                            // TƒÉng c√¢n n·∫∑ng
                            FloatingActionButton(
                              onPressed: () {
                                setState(() {
                                  weight++;
                                });
                              },
                              child: Icon(
                                Icons.add,
                                color: Colors.white,
                                size: 35.0,
                              ),
                              backgroundColor: Colors.black54,
                            ),
                          ],
                        ),
                      ],
                    ),
                  ),
                ),

                // ----------- TU·ªîI -----------
                Expanded(
                  child: ReusableCard(
                    colour: kactiveCardColor,
                    cardChild: Column(
                      mainAxisAlignment: MainAxisAlignment.center,
                      children: [
                        Text('TU·ªîI', style: klabelTextStyle),
                        Text(age.toString(), style: knumberTextStyle),
                        Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            // Gi·∫£m tu·ªïi
                            FloatingActionButton(
                              onPressed: () {
                                setState(() {
                                  age--;
                                });
                              },
                              child: Icon(
                                Icons.remove,
                                color: Colors.white,
                                size: 35.0,
                              ),
                              backgroundColor: Colors.black54,
                            ),
                            SizedBox(width: 10.0),
                            // TƒÉng tu·ªïi
                            FloatingActionButton(
                              onPressed: () {
                                setState(() {
                                  age++;
                                });
                              },
                              child: Icon(
                                Icons.add,
                                color: Colors.white,
                                size: 35.0,
                              ),
                              backgroundColor: Colors.black54,
                            ),
                          ],
                        ),
                      ],
                    ),
                  ),
                ),
              ],
            ),
          ),

          // ----------------- N√öT T√çNH BMI -----------------
          GestureDetector(
            onTap: () {
              // Kh·ªüi t·∫°o l·ªõp t√≠nh to√°n BMI
              CalculatorBrain calc = CalculatorBrain(
                height: height,
                weight: weight,
              );

              // Chuy·ªÉn sang m√†n h√¨nh k·∫øt qu·∫£, truy·ªÅn d·ªØ li·ªáu c·∫ßn thi·∫øt
              Navigator.push(
                context,
                MaterialPageRoute(
                  builder: (context) {
                    return ResultsPage(
                      bmiResult: calc.calculateBMI(),
                      resultText: calc.getResult(),
                      interpretation: calc.getInterpretation(),
                    );
                  },
                ),
              );
            },
            child: Container(
              child: Card(
                color: Colors.pinkAccent,
                child: Center(
                  child: Text('T√çNH BMI', style: klargestButtonTextStyle),
                ),
                shape: RoundedRectangleBorder(
                  borderRadius: BorderRadius.circular(10.0),
                ),
              ),
              margin: EdgeInsets.only(top: 10.0),
              padding: EdgeInsets.only(bottom: 10.0),
              height: 70.0,
            ),
          ),
        ],
      ),
    );
  }
}

// =====================================
// M√ÄN H√åNH HI·ªÇN TH·ªä K·∫æT QU·∫¢
// =====================================
class ResultsPage extends StatelessWidget {
  ResultsPage({
    required this.bmiResult,
    required this.resultText,
    required this.interpretation,
  });

  final String bmiResult; // Gi√° tr·ªã BMI
  final String resultText; // Ph√¢n lo·∫°i (B√¨nh th∆∞·ªùng / Th·ª´a c√¢n / Thi·∫øu c√¢n)
  final String interpretation; // L·ªùi khuy√™n

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        backgroundColor: Color(0xFF111328),
        title: Text('M√°y t√≠nh BMI'),
        centerTitle: true,
      ),
      body: Column(
        mainAxisAlignment: MainAxisAlignment.spaceEvenly,
        crossAxisAlignment: CrossAxisAlignment.stretch,
        children: [
          // Ti√™u ƒë·ªÅ
          Expanded(
            child: Container(
              child: Center(child: Text('K·∫øt qu·∫£', style: ktitleTextStyle)),
            ),
          ),

          // Th·∫ª k·∫øt qu·∫£ ch√≠nh
          Expanded(
            flex: 5,
            child: ReusableCard(
              colour: Color(0xFF1D1E33),
              cardChild: Column(
                mainAxisAlignment: MainAxisAlignment.spaceEvenly,
                crossAxisAlignment: CrossAxisAlignment.center,
                children: [
                  Text(resultText.toUpperCase(), style: kresultTextStyle),
                  Text(bmiResult, style: kBMITextStyle),
                  Text(
                    interpretation,
                    style: kbodyTextStyle,
                    textAlign: TextAlign.center,
                  ),
                ],
              ),
            ),
          ),

          // N√öT T√çNH L·∫†I
          GestureDetector(
            onTap: () {
              Navigator.pop(context); // Quay l·∫°i m√†n h√¨nh tr∆∞·ªõc
            },
            child: Container(
              child: Card(
                color: Colors.pinkAccent,
                child: Center(
                  child: Text('T√çNH L·∫†I', style: klargestButtonTextStyle),
                ),
                shape: RoundedRectangleBorder(
                  borderRadius: BorderRadius.circular(10.0),
                ),
              ),
              margin: EdgeInsets.only(top: 10.0),
              padding: EdgeInsets.only(bottom: 10.0),
              height: 70.0,
            ),
          ),
        ],
      ),
    );
  }
}
